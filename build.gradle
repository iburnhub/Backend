plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.ec4j.editorconfig' version '0.1.0'
    id 'checkstyle'
    id("com.palantir.docker") version "0.36.0"
}

docker {
    name "${project.group}/${project.name}:${project.version}"
    files jar.outputs.files
    buildArgs(['JAR_FILE': "${project.name}-${project.version}.jar"])
}

editorconfig {
    excludes = ['build']
}

check.dependsOn editorconfigCheck // checkstyle이 설정 되어 있을 시, editorconfigCheck 후 checkstyle 진행

checkstyle {
    maxWarnings = 0
    configFile = file("${rootDir}/config/naver-checkstyle-rules.xml")
    configProperties = ["suppressionFile": "${rootDir}/config/naver-checkstyle-suppressions.xml"]
    toolVersion = "8.42"
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

group = 'mejai'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

//for lombok config
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5-jakarta'

    implementation 'org.postgresql:postgresql:42.7.2'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor('org.projectlombok:lombok')
    runtimeOnly 'com.h2database:h2'

    //only apple silicon
    runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.104.Final:osx-aarch_64'
    testImplementation("org.junit.vintage:junit-vintage-engine") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly("org.springframework.boot:spring-boot-devtools")//서버 안 꺼도 되게

    //Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //mapstruct 추가
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final' // if you are using mapstruct in test code
}

tasks.named('test') {
    useJUnitPlatform()
}
